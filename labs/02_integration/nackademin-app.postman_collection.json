{
	"info": {
		"_postman_id": "516254c8-c6a3-4ab4-b688-b1d6f2fcabf7",
		"name": "nackademin_app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40934769"
	},
	"item": [
		{
			"name": "QA",
			"item": [
				{
					"name": "Login_qa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Kör bara om inloggningen lyckas\r",
									"pm.test(\"Login responded\", () => pm.response.code > 0);\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"  let data;\r",
									"  try { data = pm.response.json(); } catch (e) { data = {}; }\r",
									"\r",
									"  // Stöd både access_token/token/jwt\r",
									"  const tok = data.access_token || data.token || data.jwt;\r",
									"\r",
									"  // Sätt token i environment\r",
									"  if (tok) {\r",
									"    pm.environment.set(\"token\", tok);\r",
									"  } else {\r",
									"    pm.environment.unset(\"token\");\r",
									"  }\r",
									"\r",
									"  // Tester\r",
									"  pm.test(\"Token was received\", () => pm.expect(pm.environment.get(\"token\")).to.exist);\r",
									"} else {\r",
									"  // Misslyckad login → ta bort ev. gammal token så vi inte luras\r",
									"  pm.environment.unset(\"token\");\r",
									"  pm.test(`Login failed (${pm.response.code})`, () => pm.expect.fail(`Status ${pm.response.code}`));\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin_qa\",\r\n  \"password\": \"pass_5678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Poducts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Created\", () => pm.response.code === 201 || pm.response.code === 200);\r",
									"if (pm.response.code === 200 || pm.response.code === 201) {\r",
									"  const p = pm.response.json();\r",
									"  pm.environment.set(\"lastProductId\", p.id);\r",
									"  pm.test(\"Has id\", () => pm.expect(p.id).to.exist);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"choklad\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DEV",
			"item": [
				{
					"name": "login_dev",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Kör bara om inloggningen lyckas\r",
									"pm.test(\"Login responded\", () => pm.response.code > 0);\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"  let data;\r",
									"  try { data = pm.response.json(); } catch (e) { data = {}; }\r",
									"\r",
									"  // Stöd både access_token/token/jwt\r",
									"  const tok = data.access_token || data.token || data.jwt;\r",
									"\r",
									"  // Sätt token i environment\r",
									"  if (tok) {\r",
									"    pm.environment.set(\"token\", tok);\r",
									"  } else {\r",
									"    pm.environment.unset(\"token\");\r",
									"  }\r",
									"\r",
									"  // Tester\r",
									"  pm.test(\"Token was received\", () => pm.expect(pm.environment.get(\"token\")).to.exist);\r",
									"} else {\r",
									"  // Misslyckad login → ta bort ev. gammal token så vi inte luras\r",
									"  pm.environment.unset(\"token\");\r",
									"  pm.test(`Login failed (${pm.response.code})`, () => pm.expect.fail(`Status ${pm.response.code}`));\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin_dev\",\r\n  \"password\": \"pass_1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Products",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Playstation\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}