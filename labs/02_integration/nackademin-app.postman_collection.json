{
	"info": {
		"_postman_id": "3f9a3012-13d1-4304-9edf-5ac41557dfa1",
		"name": "Nackademin-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41787508"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.access_token);\r",
							"pm.environment.set(\"token_type\", jsonData.token_type);\r",
							"\r",
							"pm.test(\"Login successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Token is present\", function () {\r",
							"    pm.expect(jsonData.access_token).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": {{username}},\r\n  \"password\": {{password}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User response has products array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"products\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/user",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "add products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Spara product_id för senare användning\r",
							"const productId = pm.response.json().id;\r",
							"pm.environment.set(\"product_id\", productId);\r",
							"\r",
							"// Testa statuscode\r",
							"pm.test(\"Product created successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Testa att product name finns\r",
							"pm.test(\"Product name is correct\", function () {\r",
							"    const name = pm.response.json().name;\r",
							"    pm.expect(name).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"gurka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"const userId = pm.response.json().id;\r",
							"pm.environment.set(\"user_id\", userId);\r",
							"\r",
							"pm.test(\"User created successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Username is correct\", function () {\r",
							"    const username = pm.response.json().username;\r",
							"    pm.expect(username).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": {{username}},\r\n  \"password\": {{password}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/signup",
					"host": [
						"{{URL}}"
					],
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "list products",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Testa statuscode\r",
							"pm.test(\"List products successful\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Testa att listan inte är tom\r",
							"pm.test(\"Product list is not empty\", function () {\r",
							"    const products = pm.response.json();\r",
							"    pm.expect(products).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List products successful\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseData = pm.response.json();\r",
							"  pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"  pm.expect(responseData[0]).to.have.property('name');\r",
							"  pm.expect(responseData[0]).to.have.property('id');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "HTTPBearer  (http, Bearer)",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbl9kZXYxIiwiZXhwIjoxNzU2MTI1NjE5fQ.XmYY45vl7k97H2HRR0QVCQ87viCy_YRMa4EfH4uBApM",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}