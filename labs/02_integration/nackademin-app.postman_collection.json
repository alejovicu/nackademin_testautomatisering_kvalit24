{
	"info": {
		"_postman_id": "bc789e28-5158-41c7-8760-17194ac96965",
		"name": "class app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41006838",
		"_collection_link": "https://mv4444-6592.postman.co/workspace/Labb02_Mikaelavaron~f1d0bc10-177b-4b26-800f-b533c7be8deb/collection/41006838-bc789e28-5158-41c7-8760-17194ac96965?action=share&source=collection_link&creator=41006838"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "create user",
					"item": [
						{
							"name": "user_product",
							"item": [
								{
									"name": "Products",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"statuscode:200\", function() { \r",
													"    pm.responseto.not.equal(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend.env}}/products",
											"host": [
												"{{backend.env}}"
											],
											"path": [
												"products"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Sign_up",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateUsername(lenght) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let username = '';\r",
											"    for (let i = 0; i < lenght; i++) {\r",
											"        username += chars.charAt(Math.floor(Math.random() * chars.length))\r",
											"    }\r",
											"\r",
											"    return username;\r",
											"}\r",
											"\r",
											"let username = generateUsername(7);\r",
											"\r",
											"pm.environment.set(\"username\", username);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"statuscode:200\", function() { \r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Admin_creted\", function() {\r",
											"    const newadmin = pm.response.json();\r",
											"    pm.expect(newadmin).to.have.property(\"username\");\r",
											"    pm.expect(newadmin).to.have.property(\"products\");\r",
											"    pm.expect(newadmin).to.have.property(\"id\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend.env}}/signup",
									"host": [
										"{{backend.env}}"
									],
									"path": [
										"signup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statuscode:200\", function() { \r",
									"    pm.expect(pm.response.code).not.equal(400);\r",
									"});\r",
									"\r",
									"var json= pm.response .json();\r",
									"pm.environment.set(\"TOKEN\", json.access_token);\r",
									"\r",
									"pm.test(\"response body is not empty\", function() { \r",
									"    pm.expect(pm.response.text()).to.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backend.env}}/login",
							"host": [
								"{{backend.env}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Create Admin",
					"item": [
						{
							"name": "Admin_product",
							"item": [
								{
									"name": "Products",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"statuscode:200\", function() { \r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend.env}}/products",
											"host": [
												"{{backend.env}}"
											],
											"path": [
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add products",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"statuscode:200\", function() { \r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"created_new_product\", function() {\r",
													"    const created_new_product = pm.response.json();\r",
													"    pm.expect(created_new_product).to.have.property(\"name\");\r",
													"    pm.expect(created_new_product).to.have.property(\"id\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"iphone\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend.env}}/products",
											"host": [
												"{{backend.env}}"
											],
											"path": [
												"products"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"statuscode:200\", function() { \r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var json= pm.response .json();\r",
											"pm.environment.set(\"TOKEN\", json.access_token);\r",
											"\r",
											"pm.test(\"response body is not empty\", function() { \r",
											"    pm.expect(pm.response.text()).to.not.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend.env}}/login",
									"host": [
										"{{backend.env}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign_up",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateUsername(lenght) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let username = '';\r",
											"    for (let i = 0; i < lenght; i++) {\r",
											"        username += chars.charAt(Math.floor(Math.random() * chars.length))\r",
											"    }\r",
											"\r",
											"    return username;\r",
											"}\r",
											"\r",
											"let username = generateUsername(7);\r",
											"\r",
											"pm.environment.set(\"username\", username);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"statuscode:200\", function() { \r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Admin_creted\", function() {\r",
											"    const newadmin = pm.response.json();\r",
											"    pm.expect(newadmin).to.have.property(\"username\");\r",
											"    pm.expect(newadmin).to.have.property(\"products\");\r",
											"    pm.expect(newadmin).to.have.property(\"id\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend.env}}/signup",
									"host": [
										"{{backend.env}}"
									],
									"path": [
										"signup"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}