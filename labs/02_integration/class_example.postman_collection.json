{
	"info": {
		"_postman_id": "f773c6a5-d80a-4618-a62d-0471415700e1",
		"name": "Class App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2980405",
		"_collection_link": "https://nackademin-testautomation-24.postman.co/workspace/nackademin_testautomation_24~eb1d397c-a9ac-4e07-b498-24360914bfba/collection/2980405-f773c6a5-d80a-4618-a62d-0471415700e1?action=share&source=collection_link&creator=2980405"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create new user",
					"item": [
						{
							"name": "signup",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Function to generate a random username\r",
											"function generateUsername(length) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let username = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        username += chars.charAt(Math.floor(Math.random() * chars.length));\r",
											"    }\r",
											"    return username;\r",
											"}\r",
											"\r",
											"// Generate a 10-character username\r",
											"let username = generateUsername(10);\r",
											"\r",
											"// Store it in an environment variable\r",
											"pm.environment.set(\"username\", username);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse the JSON response body\r",
											"let responseJson = pm.response.json();\r",
											"\r",
											"\r",
											"// Validate that ID is a number\r",
											"pm.test(\"ID is a number\", function() {\r",
											"    pm.expect(responseJson.id).to.be.a('number');\r",
											"});\r",
											"\r",
											"// Validate that username is a string\r",
											"pm.test(\"Username is a string\", function() {\r",
											"    pm.expect(responseJson.username).to.be.a('string');\r",
											"});\r",
											"\r",
											"// Validate that products is an array\r",
											"pm.test(\"Products is an array\", function() {\r",
											"    pm.expect(responseJson.products).to.be.an('array');\r",
											"});\r",
											"\r",
											"// Validate that products array is empty\r",
											"pm.test(\"Products is an empty array\", function() {\r",
											"    pm.expect(responseJson.products).to.be.an('array').that.is.empty;\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend.env}}/signup",
									"host": [
										"{{backend.env}}"
									],
									"path": [
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Token is a string\", function() {\r",
											"    pm.expect(pm.response.json().access_token).to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"jwt\", pm.response.json().access_token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend.env}}/login",
									"host": [
										"{{backend.env}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					],
					"description": "Given I am a new potential customer​\n\nWhen I signup in the app​\n\nThen I should be able to log in with my new user"
				}
			]
		},
		{
			"name": "Product Catalog",
			"item": []
		}
	]
}